{"version":3,"sources":["style/HomeStyles.js","components/Header.js","components/MapLoadingProgress.js","actions/controlAction.js","components/Map.js","utils/colors.js","actions/dataActions.js","components/Loadfile.js","components/Slider.js","components/Sidebar.js","components/Home.js","App.js","reducers/dataReducer.js","reducers/controlReducers.js","reducers/index.js","store/index.js","index.js"],"names":["styles","theme","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","backgroundColor","palette","primary","main","content","flexGrow","contentShift","Header","this","props","classes","open","handleDrawerOpen","AppBar","position","className","clsx","Toolbar","IconButton","color","aria-label","onClick","edge","Typography","variant","noWrap","Component","withStyles","MapLoadingProgress","loading","style","marginTop","CircularProgress","size","CHANGE_OPACITY","DOWNLOAD_FILE","downloadGeojsonFile","download","type","payload","Map","state","onLabelClick","bind","save","loadExtraStyles","styleTMS","version","sources","tiles","config","layers","tileSize","id","source","minzoom","maxzoom","mapConfig","container","node","center","zoom","attributionControl","hoverId","map","mapboxgl","onMapRender","e","target","loaded","setState","on","getCanvas","cursor","event","feature","features","clase","currentlabel","data","f","properties","index","label","status","getSource","setData","nextProps","initLabels","opacity","downloadFile","dispatch","_data","blob","Blob","JSON","stringify","saveAs","forEach","c","length","addLayer","name","setLayoutProperty","filters","fillColors","concat","setPaintProperty","i","layerName","getLayer","paintLayer","paint","lineLayer","addSource","box","bbox","fitBounds","Fragment","top","rigt","left","zIndex","bottom","overflow","ref","connect","geojsonData","error","labels","control","colors","chroma","scale","FETCH_DATA_BEGIN","FETCH_DATA_SUCCESS","FETCH_DATA_FAILURE","SET_LABEL","UPDATE_DATA","fetchDataBegin","fetchDataSuccess","fData","fetchDataFailure","setLabel","handleErrors","response","ok","Error","statusText","Loadfile","onFilesChange","files","fileReader","FileReader","onload","geojson","parse","result","lab","class","readAsText","fetchData","file","console","log","code","message","gutterBottom","Paper","onChange","onError","onFilesError","accepts","maxFiles","maxFileSize","minFileSize","clickable","value","margin","ValueLabelComponent","children","popperRef","React","useRef","useEffect","current","update","Tooltip","PopperProps","enterTouchDelay","placement","title","SliderComponent","changeOpacityControl","Slider","defaultValue","Sidebar","choseLabel","contentEditable","createRef","MenuList","key","MenuItem","selected","paddingBottom","paddingTop","Grid","item","xs","justify","background","legendSpan","Divider","CardActions","Button","compose","fontSize","height","textAlign","Home","handleDrawerClose","url","window","location","href","split","fetch","then","res","json","catch","fetchDataURL","Drawer","anchor","paper","component","createMuiTheme","amber","secondary","red","App","ThemeProvider","CssBaseline","initialState","combineReducers","action","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f9745f67.chunk.js","sourcesContent":["const drawerWidth = 240;\n\nconst styles = theme => ({\n  root: {\n    display: 'flex'\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  hide: {\n    display: 'none'\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n    justifyContent: 'space-between',\n    backgroundColor: theme.palette.primary.main\n  },\n  content: {\n    flexGrow: 1,\n    marginLeft: -drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginLeft: 0\n  }\n});\n\nexport default styles;\n","import React, { Component } from 'react';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/styles';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport styles from '../style/HomeStyles';\n\nclass Header extends Component {\n  render () {\n    const { classes, open, handleDrawerOpen } = this.props;\n    return (\n      <AppBar\n        position='fixed'\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color='inherit'\n            aria-label='open drawer'\n            onClick={handleDrawerOpen}\n            edge='start'\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant='h6' noWrap>\n            Relabeler\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n\nexport default withStyles(styles)(Header);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst MapLoadingProgress = props => {\n  const { loading } = props;\n  let content;\n  if (loading) {\n    content = (\n      <div style={{ marginLeft: 'calc(50% - 5px)', marginTop: 'calc(100vh/2 - 65px)' }}>\n        <CircularProgress size={80} color='secondary' />\n      </div>\n    );\n  } else {\n    content = <div />;\n  }\n  return content;\n};\n\nMapLoadingProgress.propTypes = {\n  loading: PropTypes.bool.isRequired\n};\n\nexport default MapLoadingProgress;\n","export const CHANGE_OPACITY = 'CHANGE_OPACITY';\nexport const DOWNLOAD_FILE = 'DOWNLOAD_FILE';\n\nexport const changeOpacity = opacity => {\n  return {\n    type: CHANGE_OPACITY,\n    payload: { opacity }\n  };\n};\n\nexport const downloadGeojsonFile = download => {\n  return {\n    type: DOWNLOAD_FILE,\n    payload: { download }\n  };\n};\n","import React, { Component } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport bbox from '@turf/bbox';\nimport { saveAs } from 'file-saver';\nimport { connect } from 'react-redux';\nimport MapLoadingProgress from './MapLoadingProgress';\nimport { downloadGeojsonFile } from '../actions/controlAction';\nimport config from './../config.json';\nclass Map extends Component {\n  constructor (props) {\n    super(props);\n    this.state = { loading: true };\n    this.onLabelClick = this.onLabelClick.bind(this);\n    this.save = this.save.bind(this);\n    this.loadExtraStyles = this.loadExtraStyles.bind(this);\n  }\n\n  componentDidMount () {\n    // mapboxgl.accessToken = config.accessToken;\n    const styleTMS = {\n      version: 8,\n      sources: {\n        'raster-tiles': {\n          type: 'raster',\n          tiles: config.layers,\n          tileSize: 256\n        }\n      },\n      layers: [\n        {\n          id: 'tmsLayer',\n          type: 'raster',\n          source: 'raster-tiles',\n          minzoom: 0,\n          maxzoom: 22\n        }\n      ]\n    };\n    const mapConfig = {\n      container: this.node,\n      style: styleTMS,\n      center: [0, 0],\n      zoom: 0,\n      attributionControl: true\n    };\n    this.hoverId = 0;\n    const map = new mapboxgl.Map(mapConfig);\n    const onMapRender = e => {\n      if (e.target && e.target.loaded()) {\n        this.setState({ loading: false });\n      }\n    };\n    this.onMapRender = onMapRender;\n    map.on('render', this.onMapRender);\n    map.on('load', () => {\n      map.on('click', 'labels', this.onLabelClick);\n      this.loadExtraStyles();\n    });\n    map.on('mouseover', 'labels', function (e) {\n      map.getCanvas().style.cursor = e ? 'pointer' : '';\n    });\n    this.map = map;\n  }\n\n  onLabelClick (event) {\n    // shift the label by one\n    const feature = event.features[0];\n    const clase = this.props.currentlabel;\n    const data = this.props.data;\n    data.features = this.props.data.features.map(f => {\n      if (f.properties.index === feature.properties.index) {\n        f.properties.label[clase.id] = f.properties.label[clase.id] ? 0 : 1;\n        f.properties.status = !f.properties.status || f.properties.status === 'no' ? 'yes' : 'no';\n      }\n      return f;\n    });\n    this.map.getSource('labels').setData(data);\n  }\n\n  componentWillReceiveProps (nextProps) {\n    if (nextProps.data && nextProps.currentlabel) {\n      this.initLabels(nextProps.data, nextProps.currentlabel, nextProps.opacity);\n    }\n\n    // Download geojso file\n    if (nextProps.downloadFile) {\n      this.save();\n      this.props.dispatch(downloadGeojsonFile(false));\n    }\n  }\n\n  save () {\n    const data = this.map.getSource('labels')._data;\n    const blob = new Blob([JSON.stringify(data)], { type: 'application/json;charset=utf-8' });\n    saveAs(blob, 'labels.geojson');\n  }\n\n  loadExtraStyles () {\n    config.classes.forEach(c => {\n      if (c.layers.length > 0) {\n        this.map.addLayer({\n          id: c.name,\n          type: 'raster',\n          source: {\n            type: 'raster',\n            tiles: c.layers,\n            minzoom: 0,\n            maxzoom: 22\n          }\n        });\n        this.map.setLayoutProperty(c.name, 'visibility', 'none');\n      }\n    });\n  }\n\n  initLabels (data, currentlabel, opacity) {\n    const filters = [\n      ['==', ['number', ['at', currentlabel.id, ['array', ['get', 'label']]]], 1],\n      currentlabel.color\n    ];\n    const fillColors = ['case'].concat(filters).concat(['black']);\n\n    /**\n     * Load the layer for first time\n     */\n    if (!this.map.getSource('labels')) {\n      const paintLayer = {\n        id: 'labels',\n        source: 'labels',\n        type: 'fill',\n        paint: {\n          'fill-color': fillColors,\n          'fill-opacity': opacity / 100\n        }\n      };\n\n      const lineLayer = {\n        id: 'labels-line',\n        source: 'labels',\n        type: 'line',\n        paint: {\n          'line-width': ['match', ['get', 'status'], 'no', 2, 'yes', 2, 1],\n          'line-color': ['match', ['get', 'status'], 'no', '#e77cff', 'yes', '#e77cff', 'white'],\n          'line-opacity': opacity / 100\n        }\n      };\n\n      /**\n       * Set label\n       */\n      data.features = data.features.map((f, i) => {\n        f.properties.index = i;\n        return f;\n      });\n      this.map.addSource('labels', {\n        type: 'geojson',\n        data: data\n      });\n      const box = bbox(data);\n      // zoom to the data\n      this.map.fitBounds([[box[0], box[1]], [box[2], box[3]]]);\n      this.map.addLayer(paintLayer);\n      this.map.addLayer(lineLayer);\n    } else {\n      this.map.setPaintProperty('labels', 'fill-color', fillColors);\n      this.map.setPaintProperty('labels', 'fill-opacity', opacity / 100);\n      this.map.setPaintProperty('labels-line', 'line-opacity', opacity / 100);\n      // show and hide layers\n      config.classes.forEach((c, i) => {\n        const layerName = c.name;\n        if (this.map.getLayer(layerName)) {\n          this.map.setLayoutProperty(layerName, 'visibility', 'none');\n          if (currentlabel.id === i) {\n            this.map.setLayoutProperty(layerName, 'visibility', 'visible');\n          }\n        }\n      });\n    }\n  }\n\n  render () {\n    const { loading } = this.state;\n    const style = {\n      position: 'absolute',\n      top: 0,\n      rigt: 0,\n      left: 0,\n      zIndex: 99,\n      bottom: 0,\n      width: '100%',\n      overflow: 'hidden'\n    };\n\n    return (\n      <React.Fragment>\n        <div id='map' style={style} ref={c => (this.node = c)} />\n        <MapLoadingProgress loading={loading} />\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  data: state.geojsonData.data,\n  loading: state.geojsonData.loading,\n  error: state.geojsonData.error,\n  labels: state.geojsonData.labels,\n  currentlabel: state.geojsonData.label,\n  opacity: state.control.opacity,\n  downloadFile: state.control.downloadFile\n});\n\nexport default connect(mapStateToProps)(Map);\n","import chroma from 'chroma-js';\n\nconst colors = chroma.scale('Set2').colors(10);\nexport { colors };\n","import { colors } from '../utils/colors';\n\nexport const FETCH_DATA_BEGIN = 'FETCH_DATA_BEGIN';\nexport const FETCH_DATA_SUCCESS = 'FETCH_DATA_SUCCESS';\nexport const FETCH_DATA_FAILURE = 'FETCH_DATA_FAILURE';\nexport const SET_LABEL = 'SET_LABEL';\nexport const UPDATE_DATA = 'UPDATE_DATA';\n\nexport const fetchDataBegin = () => ({\n  type: FETCH_DATA_BEGIN\n});\n\nexport const fetchDataSuccess = (fData, labels, label) => {\n  return {\n    type: FETCH_DATA_SUCCESS,\n    payload: { fData, labels, label }\n  };\n};\n\nexport const fetchDataFailure = error => ({\n  type: FETCH_DATA_FAILURE,\n  payload: { error }\n});\n\nexport const setLabel = label => ({\n  type: SET_LABEL,\n  payload: { label }\n});\n\nexport const updateData = fData => {\n  return {\n    type: UPDATE_DATA,\n    payload: { fData }\n  };\n};\n\nexport function fetchData (files) {\n  return dispatch => {\n    dispatch(fetchDataBegin());\n    const fileReader = new FileReader();\n    fileReader.onload = function (e) {\n      const geojson = JSON.parse(fileReader.result);\n      // Get labels from the source\n      const labels = geojson.features[0].properties.label.map((lab, i) => {\n        return {\n          id: i,\n          class: `Class ${i + 1}`,\n          color: colors[i % 10]\n        };\n      });\n\n      dispatch(fetchDataSuccess(geojson, labels, labels[0]));\n    };\n    fileReader.readAsText(files[0]);\n  };\n}\n\nexport function fetchDataURL (url) {\n  return dispatch => {\n    dispatch(fetchDataBegin());\n    return fetch(url)\n      .then(handleErrors)\n      .then(res => res.json())\n      .then(json => {\n        // Get labels from the source\n        const labels = json.features[0].properties.label.map((lab, i) => {\n          return {\n            id: i,\n            class: `Class ${i + 1}`,\n            color: colors[i % 10]\n          };\n        });\n        dispatch(fetchDataSuccess(json, labels, labels[0]));\n        return json;\n      })\n      .catch(error => dispatch(fetchDataFailure(error)));\n  };\n}\n\n// Handle HTTP errors since fetch won't.\nfunction handleErrors (response) {\n  if (!response.ok) {\n    throw Error(response.statusText);\n  }\n  return response;\n}\n","import React, { Component } from 'react';\nimport Files from 'react-files';\nimport { connect } from 'react-redux';\nimport { fetchData } from './../actions/dataActions';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nclass Loadfile extends Component {\n  constructor (props) {\n    super(props);\n    this.onFilesChange = this.onFilesChange.bind(this);\n  }\n\n  onFilesChange (files) {\n    this.props.dispatch(fetchData(files));\n  }\n\n  onFilesError (error, file) {\n    console.log('error code ' + error.code + ': ' + error.message);\n  }\n\n  render () {\n    return (\n      <div style={{ padding: 10 }}>\n        <Typography variant='caption' display='block' gutterBottom>\n          Load label-maker geojson file\n        </Typography>\n        <Paper>\n          <Files\n            className='files-dropzone-list'\n            onChange={this.onFilesChange}\n            onError={this.onFilesError}\n            accepts={['.geojson', '.json']}\n            maxFiles={1}\n            maxFileSize={1000000000}\n            minFileSize={0}\n            clickable\n          >\n            <input type='submit' value='Choose a file' style={{ width: '210px', margin: '5px' }} />\n          </Files>\n        </Paper>\n      </div>\n    );\n  }\n}\n\nexport default connect(null)(Loadfile);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Paper from '@material-ui/core/Paper';\nimport Slider from '@material-ui/core/Slider';\nimport Typography from '@material-ui/core/Typography';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { changeOpacity } from './../actions/controlAction';\n\nfunction ValueLabelComponent (props) {\n  const { children, open, value } = props;\n  const popperRef = React.useRef(null);\n  React.useEffect(() => {\n    if (popperRef.current) {\n      popperRef.current.update();\n    }\n  });\n\n  return (\n    <Tooltip\n      PopperProps={{\n        popperRef\n      }}\n      open={open}\n      enterTouchDelay={0}\n      placement='top'\n      title={value}\n    >\n      {children}\n    </Tooltip>\n  );\n}\n\nValueLabelComponent.propTypes = {\n  children: PropTypes.element.isRequired,\n  open: PropTypes.bool.isRequired,\n  value: PropTypes.number.isRequired\n};\n\nclass SliderComponent extends Component {\n  constructor (props) {\n    super(props);\n    this.changeOpacityControl = this.changeOpacityControl.bind(this);\n  }\n\n  changeOpacityControl (event, value) {\n    this.props.dispatch(changeOpacity(value));\n  }\n\n  render () {\n    const { opacity } = this.props;\n    return (\n      <div style={{ width: '210px', margin: '5px' }}>\n        <Typography variant='caption' display='block' gutterBottom>\n          Label opacity\n        </Typography>\n        <Paper style={{ padding: '3px' }}>\n          <Slider\n            ValueLabelComponent={ValueLabelComponent}\n            aria-label='label'\n            defaultValue={opacity}\n            onChange={this.changeOpacityControl}\n          />\n        </Paper>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps (state) {\n  return {\n    opacity: state.control.opacity\n  };\n}\nexport default connect(mapStateToProps)(SliderComponent);\n","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport Grid from '@material-ui/core/Grid';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport { setLabel } from '../actions/dataActions';\nimport { downloadGeojsonFile } from '../actions/controlAction';\nimport Divider from '@material-ui/core/Divider';\nimport config from './../config.json';\nimport Loadfile from './Loadfile';\nimport Slider from './Slider';\n\nconst styles = theme => ({\n  title: {\n    fontSize: 12,\n    alignItems: 'center',\n    marginTop: '5px'\n  },\n  legendSpan: {\n    display: 'block',\n    height: '25px',\n    width: '60px',\n    textAlign: 'center',\n    alignItems: 'center',\n    color: '#808080'\n  }\n});\n\nclass Sidebar extends Component {\n  constructor () {\n    super();\n    this.contentEditable = React.createRef();\n  }\n\n  choseLabel = (label, id) => {\n    this.props.dispatch(setLabel(label));\n  };\n\n  downloadFile = () => {\n    this.props.dispatch(downloadGeojsonFile(true));\n  };\n\n  render () {\n    const { classes, labels, currentlabel } = this.props;\n    return (\n      <div>\n        <MenuList>\n          {labels.map((label, id) => {\n            return (\n              <div key={id}>\n                <MenuItem\n                  selected={label.id === currentlabel.id}\n                  onClick={() => {\n                    this.choseLabel(label, id);\n                  }}\n                  style={{ paddingBottom: '2px', paddingTop: '2px' }}\n                >\n                  <Grid item xs={12}>\n                    <Grid container justify='center'>\n                      <Grid item xs={8}>\n                        <Typography className={classes.title} color='textSecondary' gutterBottom>\n                          {config.classes[id].name || label.class}\n                        </Typography>\n                      </Grid>\n                      <Grid item xs={4}>\n                        <span\n                          style={{ background: label.color, marginLeft: '5px' }}\n                          className={classes.legendSpan}\n                        />\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                </MenuItem>\n                <Divider />\n              </div>\n            );\n          })}\n        </MenuList>\n        {labels.length === 0 ? <Loadfile /> : null}\n        <CardActions>\n          {labels.length > 0 ? (\n            <div>\n              <Slider />\n              <div style={{ margin: '3px' }}>\n                <Button variant='outlined' onClick={this.downloadFile}>\n                  Download\n                </Button>\n              </div>\n            </div>\n          ) : null}\n        </CardActions>\n        <Divider />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  labels: state.geojsonData.labels,\n  currentlabel: state.geojsonData.label\n});\n\nexport default compose(\n  connect(mapStateToProps),\n  withStyles(styles)\n)(Sidebar);\n","import React, { Component } from 'react';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport Header from './Header';\nimport styles from './../style/HomeStyles';\nimport Map from './Map';\nimport Sidebar from './Sidebar';\nimport { fetchDataURL } from './../actions/dataActions';\nclass Home extends Component {\n  constructor (props) {\n    super(props);\n    this.state = { open: true };\n    const url = window.location.href.split('?url=')[1];\n    this.props.dispatch(fetchDataURL(url));\n  }\n\n  handleDrawerOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleDrawerClose = () => {\n    this.setState({ open: false });\n  };\n\n  render () {\n    // const open =true;\n    const { classes } = this.props;\n    const { open } = this.state;\n    return (\n      <div className={classes.root}>\n        <Header handleDrawerOpen={this.handleDrawerOpen} open={open} />\n        <Drawer\n          className={classes.drawer}\n          variant='persistent'\n          anchor='left'\n          open={open}\n          classes={{\n            paper: classes.drawerPaper\n          }}\n        >\n          <div className={classes.drawerHeader}>\n            <Typography gutterBottom component='h3'>\n              Classes\n            </Typography>\n            <IconButton onClick={this.handleDrawerClose}>\n              <ChevronLeftIcon />\n            </IconButton>\n          </div>\n          <Divider />\n          <Sidebar />\n        </Drawer>\n        <Map className={clsx(classes.content)} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({});\n\nexport default compose(\n  connect(mapStateToProps),\n  withStyles(styles)\n)(Home);\n","import React, { Component } from 'react';\nimport 'typeface-roboto'; // eslint-disable-line\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport amber from '@material-ui/core/colors/amber';\nimport red from '@material-ui/core/colors/red';\nimport { ThemeProvider } from '@material-ui/styles';\n\nimport Home from './components/Home';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: amber,\n    secondary: red\n  }\n});\n\nclass App extends Component {\n  render () {\n    return (\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <Home />\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","import {\n  FETCH_DATA_BEGIN,\n  FETCH_DATA_SUCCESS,\n  FETCH_DATA_FAILURE,\n  SET_LABEL,\n  UPDATE_DATA\n} from '../actions/dataActions';\n\nconst initialState = {\n  data: {},\n  loading: true,\n  error: null,\n  labels: []\n};\n\nexport default function dataReducer (state = initialState, action) {\n  switch (action.type) {\n    case FETCH_DATA_BEGIN:\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case FETCH_DATA_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        data: action.payload.fData,\n        labels: action.payload.labels,\n        label: action.payload.label\n      };\n    case FETCH_DATA_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload.error,\n        data: {}\n      };\n    case SET_LABEL:\n      return {\n        ...state,\n        label: action.payload.label\n      };\n    case UPDATE_DATA:\n      return {\n        ...state,\n        data: action.payload.fData\n      };\n    default:\n      return state;\n  }\n}\n","import { CHANGE_OPACITY, DOWNLOAD_FILE } from '../actions/controlAction';\n\nconst initialState = {\n  opacity: 50,\n  downloadFile: false\n};\n\nexport default function dataReducer (state = initialState, action) {\n  switch (action.type) {\n    case CHANGE_OPACITY:\n      return {\n        ...state,\n        opacity: action.payload.opacity\n      };\n    case DOWNLOAD_FILE:\n      return {\n        ...state,\n        downloadFile: action.payload.download\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport geojsonData from './dataReducer';\nimport control from './controlReducers';\n\nexport default combineReducers({\n  geojsonData,\n  control\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\nconst store = createStore(rootReducer, applyMiddleware(thunk));\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}