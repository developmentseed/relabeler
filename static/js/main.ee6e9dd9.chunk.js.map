{"version":3,"sources":["utils/colors.js","utils/validate.js","actions/dataActions.js","reducers/dataReducer.js","actions/controlAction.js","reducers/controlReducers.js","actions/featureActions.js","reducers/featureReducers.js","reducers/index.js","store/index.js","style/HomeStyles.js","components/Header.js","components/MapLoadingProgress.js","components/Map.style.js","components/Map.js","components/Loadfile.js","components/Slider.js","components/DisplayConflicts.js","components/Sidebar.js","components/Home.js","App.js","index.js"],"names":["colors","chroma","scale","validateTile","feature","val0","properties","label","filter","l","length","val1","map","i","index","v","conflict","fetchDataSuccess","fData","labels","type","payload","setErrorLabel","confictLabel","handleErrors","response","ok","Error","statusText","initialState","data","loading","error","fileName","downloadGeojsonFile","download","opacity","downloadFile","revLayer","valLayer","selectedFeature","combineReducers","geojsonData","state","action","control","tile","Object","assign","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","styles","theme","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","flexGrow","appBarShift","width","marginLeft","easeOut","enteringScreen","toolbar","minHeight","breakpoints","up","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","justifyContent","backgroundColor","palette","primary","main","height","content","contentShift","button","position","right","color","textTransform","textDecoration","background","border","textAlign","nameFile","Header","bind","this","props","dispatch","classes","open","handleDrawerOpen","AppBar","className","clsx","Toolbar","IconButton","aria-label","onClick","edge","Menu","Typography","variant","noWrap","Button","Component","connect","currentlabel","withStyles","MapLoadingProgress","style","marginTop","CircularProgress","size","paintLayer","id","source","paint","reviewLayer","conflictLayer","activeFeatureLayer","Map","onLabelClick","save","loadExtraStyles","toogleLayer","styleTMS","version","sources","tiles","config","layers","tileSize","minzoom","maxzoom","mapConfig","container","node","center","zoom","attributionControl","hash","maxZoom","hoverId","mapboxgl","onMapRender","e","target","loaded","setState","on","getCanvas","cursor","nextProps","initLabels","updateFeature","activeStyle","getLayer","setLayoutProperty","features","f","getSource","setData","String","setErrorLabelValidate","addSource","addLayer","event","clase","status","_data","blob","Blob","JSON","stringify","saveAs","forEach","c","name","filters","fillColors","concat","setPaintProperty","layerName","box","bbox","fitBounds","Fragment","top","rigt","left","zIndex","bottom","overflow","ref","Loadfile","onFilesChange","files","fileReader","FileReader","onload","geojson","parse","result","lab","class","readAsText","setFileName","newName","replace","split","slice","join","ext","includes","validateFileName","fetchData","file","console","err","code","message","gutterBottom","Paper","onChange","onError","onFilesError","accepts","maxFiles","maxFileSize","minFileSize","clickable","value","margin","ValueLabelComponent","children","popperRef","React","useRef","useEffect","current","update","Tooltip","PopperProps","enterTouchDelay","placement","title","SliderComponent","changeOpacityControl","toogleRevLayer","toogleValLayer","Slider","defaultValue","FormControlLabel","Checkbox","paddingBottom","paddingTop","checked","DisplayConflicts","Chip","key","icon","onDelete","setLabelIn0","Sidebar","contentEditable","createRef","choseLabel","setLabel","MenuList","toString","MenuItem","selected","Grid","item","xs","justify","legendSpan","Divider","CardActions","fontSize","Home","handleDrawerClose","url","location","href","fetch","then","res","json","catch","fetchDataFailure","fetchDataURL","Drawer","anchor","paper","component","createMuiTheme","amber","secondary","red","App","ThemeProvider","CssBaseline","ReactDOM","render","basename","exact","path","document","getElementById"],"mappings":"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","file":"static/js/main.ee6e9dd9.chunk.js","sourcesContent":["import chroma from 'chroma-js';\n\nconst colors = chroma.scale('Set2').colors(10);\nexport { colors };\n","export function validateTile (feature) {\n  const val0 = feature.properties.label.filter(l => l === 0).length;\n  const val1 = feature.properties.label.map((l, i) => { return l === 1 ? { index: i } : null; }).filter(v => v !== null);\n  if (feature.properties.label.length === val0 || (feature.properties.label[0] === 1 && val1.length > 1)) {\n    feature.properties.conflict = 'yes';\n  } else {\n    feature.properties.conflict = 'no';\n  }\n  return feature;\n}\n\nexport function validateFileName (fileName) {\n  let newName = fileName.replace(/ /g, '').split('.').slice(0, -1).join('_');\n  const ext = '.' + fileName.split('.').slice(-1)[0];\n  // buscar si tiene numeros\n  if (newName.includes('(')) { newName = newName.split('(').slice(0, -1).join('_'); }\n\n  return newName + ext;\n}\n","import { colors } from '../utils/colors';\nimport { validateFileName } from '../utils/validate';\n\nexport const FETCH_DATA_BEGIN = 'FETCH_DATA_BEGIN';\nexport const FETCH_DATA_SUCCESS = 'FETCH_DATA_SUCCESS';\nexport const FETCH_DATA_FAILURE = 'FETCH_DATA_FAILURE';\nexport const SET_LABEL = 'SET_LABEL';\nexport const UPDATE_DATA = 'UPDATE_DATA';\nexport const SET_FILE_NAME = 'SET_FILE_NAME';\nexport const SET_CONFLICT_LABEL = 'SET_CONFLICT_LABEL';\n\nexport const fetchDataBegin = () => ({\n  type: FETCH_DATA_BEGIN\n});\n\nexport const fetchDataSuccess = (fData, labels, label) => {\n  return {\n    type: FETCH_DATA_SUCCESS,\n    payload: { fData, labels, label }\n  };\n};\n\nexport const fetchDataFailure = error => ({\n  type: FETCH_DATA_FAILURE,\n  payload: { error }\n});\n\nexport const setLabel = label => ({\n  type: SET_LABEL,\n  payload: { label }\n});\nexport const setFileName = fileName => ({\n  type: SET_FILE_NAME,\n  payload: { fileName }\n});\nexport const setErrorLabel = confictLabel => ({\n  type: SET_CONFLICT_LABEL,\n  payload: { confictLabel }\n});\nexport const updateData = fData => {\n  return {\n    type: UPDATE_DATA,\n    payload: { fData }\n  };\n};\n\nexport function fetchData (files) {\n  return dispatch => {\n    dispatch(fetchDataBegin());\n    const fileReader = new FileReader();\n    fileReader.onload = function (e) {\n      const geojson = JSON.parse(fileReader.result);\n      // Get labels from the source\n      const labels = geojson.features[0].properties.label.map((lab, i) => {\n        return {\n          id: i,\n          class: `Class ${i + 1}`,\n          color: colors[i % 10]\n        };\n      });\n\n      dispatch(fetchDataSuccess(geojson, labels, labels[0]));\n    };\n    fileReader.readAsText(files[0]);\n    dispatch(setFileName(validateFileName(files[0].name)));\n  };\n}\n\nexport function fetchDataURL (url) {\n  return dispatch => {\n    dispatch(fetchDataBegin());\n    return fetch(url)\n      .then(handleErrors)\n      .then(res => res.json())\n      .then(json => {\n        // Get labels from the source\n        const labels = json.features[0].properties.label.map((lab, i) => {\n          return {\n            id: i,\n            class: `Class ${i + 1}`,\n            color: colors[i % 10]\n          };\n        });\n        dispatch(fetchDataSuccess(json, labels, labels[0]));\n        return json;\n      })\n      .catch(error => dispatch(fetchDataFailure(error)));\n  };\n}\n\n// Handle HTTP errors since fetch won't.\nfunction handleErrors (response) {\n  if (!response.ok) {\n    throw Error(response.statusText);\n  }\n  return response;\n}\n\nexport function setErrorLabelValidate (confictLabel) {\n  return dispatch => {\n    if (confictLabel === '' || confictLabel === 0) {\n      dispatch(setErrorLabel(''));\n    } else {\n      dispatch(setErrorLabel(String(confictLabel)));\n    }\n  };\n}\n","import {\n  FETCH_DATA_BEGIN,\n  FETCH_DATA_SUCCESS,\n  FETCH_DATA_FAILURE,\n  SET_LABEL,\n  UPDATE_DATA,\n  SET_FILE_NAME,\n  SET_CONFLICT_LABEL\n} from '../actions/dataActions';\n\nconst initialState = {\n  data: {},\n  loading: true,\n  error: null,\n  labels: [],\n  fileName: '',\n  confictLabel: ''\n};\n\nexport default function dataReducer (state = initialState, action) {\n  switch (action.type) {\n    case FETCH_DATA_BEGIN:\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case FETCH_DATA_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        data: action.payload.fData,\n        labels: action.payload.labels,\n        label: action.payload.label\n      };\n    case FETCH_DATA_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload.error,\n        data: {}\n      };\n    case SET_LABEL:\n      return {\n        ...state,\n        label: action.payload.label\n      };\n    case UPDATE_DATA:\n      return {\n        ...state,\n        data: action.payload.fData\n      };\n    case SET_FILE_NAME:\n      return {\n        ...state,\n        fileName: action.payload.fileName\n      };\n    case SET_CONFLICT_LABEL:\n      return {\n        ...state,\n        confictLabel: action.payload.confictLabel\n      };\n    default:\n      return state;\n  }\n}\n","export const CHANGE_OPACITY = 'CHANGE_OPACITY';\nexport const REVISION_LAYER = 'REVISION_LAYER';\nexport const VALIDATION_LAYER = 'VALIDATION_LAYER';\nexport const DOWNLOAD_FILE = 'DOWNLOAD_FILE';\n\nexport const changeOpacity = opacity => {\n  return {\n    type: CHANGE_OPACITY,\n    payload: { opacity }\n  };\n};\n\nexport const revisionLayer = revLayer => {\n  return {\n    type: REVISION_LAYER,\n    payload: { revLayer }\n  };\n};\n\nexport const validationLayer = valLayer => {\n  return {\n    type: VALIDATION_LAYER,\n    payload: { valLayer }\n  };\n};\n\nexport const downloadGeojsonFile = download => {\n  return {\n    type: DOWNLOAD_FILE,\n    payload: { download }\n  };\n};\n","import { CHANGE_OPACITY, DOWNLOAD_FILE, REVISION_LAYER, VALIDATION_LAYER } from '../actions/controlAction';\n\nconst initialState = {\n  opacity: 50,\n  downloadFile: false,\n  revLayer: true,\n  valLayer: true\n};\n\nexport default function dataReducer (state = initialState, action) {\n  switch (action.type) {\n    case CHANGE_OPACITY:\n      return {\n        ...state,\n        opacity: action.payload.opacity\n      };\n    case REVISION_LAYER:\n      return {\n        ...state,\n        revLayer: action.payload.revLayer\n      };\n    case VALIDATION_LAYER:\n      return {\n        ...state,\n        valLayer: action.payload.valLayer\n      };\n    case DOWNLOAD_FILE:\n      return {\n        ...state,\n        downloadFile: action.payload.download\n      };\n    default:\n      return state;\n  }\n}\n","export const SELECTED_FEATURE = 'SELECTED_FEATURE';\n\nexport const selectedFeature = (feature) => {\n  return {\n    type: SELECTED_FEATURE,\n    payload: { feature }\n  };\n};\n","import { SELECTED_FEATURE } from '../actions/featureActions';\n\nconst initialState = {\n  feature: null\n};\n\nexport default function selectedFeature (state = initialState, action) {\n  switch (action.type) {\n    case SELECTED_FEATURE:\n      return {\n        ...state,\n        feature: Object.assign({}, action.payload.feature)\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport geojsonData from './dataReducer';\nimport control from './controlReducers';\nimport tile from './featureReducers';\n\nexport default combineReducers({\n  geojsonData,\n  control,\n  tile\n});\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(rootReducer, composeEnhancer(applyMiddleware(thunk)));\n\nexport default store;\n","const drawerWidth = 240;\n\nconst styles = theme => ({\n  root: {\n    display: 'flex'\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    flexGrow: 1\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  toolbar: {\n    minHeight: 56,\n    [theme.breakpoints.up('sm')]: {\n      minHeight: 50\n    }\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  hide: {\n    display: 'none'\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n    justifyContent: 'space-between',\n    backgroundColor: theme.palette.primary.main,\n    minHeight: '50px !important',\n    height: '50px !important'\n  },\n  content: {\n    flexGrow: 1,\n    marginLeft: -drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginLeft: 0\n  },\n  button: {\n    position: 'absolute',\n    right: '5px',\n    color: '#fff !important',\n    textTransform: 'uppercase',\n    textDecoration: 'none',\n    background: '#ed3330',\n    display: 'inline-block',\n    border: 'none',\n    textAlign: 'center',\n    width: '180px'\n  },\n  nameFile: {\n    marginLeft: '1.5rem',\n    marginRight: '1.5rem'\n  },\n  confictLabel: {\n    position: 'absolute',\n    right: '210px'\n  }\n});\n\nexport default styles;\n","import React, { Component } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport { withStyles } from '@material-ui/styles';\nimport { AppBar, Button, Toolbar, IconButton, Typography } from '@material-ui/core';\nimport { Menu, Error } from '@material-ui/icons';\nimport styles from '../style/HomeStyles';\nimport { downloadGeojsonFile } from '../actions/controlAction';\n\nclass Header extends Component {\n  constructor () {\n    super();\n    this.downloadFile = this.downloadFile.bind(this);\n  }\n\n  downloadFile () {\n    this.props.dispatch(downloadGeojsonFile(true));\n  }\n\n  render () {\n    const { classes, open, handleDrawerOpen, fileName, confictLabel } = this.props;\n    return (\n      <AppBar\n        position='fixed'\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open\n        })}\n        // style={{ margin:'4px'}}\n      >\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            color='inherit'\n            aria-label='open drawer'\n            onClick={handleDrawerOpen}\n            edge='start'\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <Menu />\n          </IconButton>\n          <Typography variant='h6' noWrap>\n            Relabeler\n          </Typography>\n          <Typography variant='subtitle2' className={classes.nameFile}>\n            { fileName }\n          </Typography>\n          <Typography variant='subtitle1' className={classes.confictLabel}>\n            {confictLabel > 0 ? `Reviewed tiles: ${confictLabel}` : ''}\n          </Typography>\n          <Button className={classes.button} color='inherit' onClick={this.downloadFile}>Download</Button>\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n\nHeader.propTypes = {\n  classes: PropTypes.object,\n  open: PropTypes.bool,\n  handleDrawerOpen: PropTypes.func,\n  dispatch: PropTypes.func,\n  fileName: PropTypes.string,\n  confictLabel: PropTypes.string\n\n};\n\nconst mapStateToProps = state => ({\n  labels: state.geojsonData.labels,\n  currentlabel: state.geojsonData.label,\n  fileName: state.geojsonData.fileName,\n  confictLabel: state.geojsonData.confictLabel\n\n});\n\nexport default compose(\n  connect(mapStateToProps),\n  withStyles(styles)\n)(Header);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst MapLoadingProgress = props => {\n  const { loading } = props;\n  let content;\n  if (loading) {\n    content = (\n      <div style={{ marginLeft: 'calc(50% - 5px)', marginTop: 'calc(100vh/2 - 65px)' }}>\n        <CircularProgress size={80} color='secondary' />\n      </div>\n    );\n  } else {\n    content = <div />;\n  }\n  return content;\n};\n\nMapLoadingProgress.propTypes = {\n  loading: PropTypes.bool.isRequired\n};\n\nexport default MapLoadingProgress;\n","export const paintLayer = {\n  id: 'labels',\n  source: 'labels',\n  type: 'fill',\n  paint: {\n    //   'fill-color': fillColors,\n    'fill-opacity': 50 / 100\n  }\n};\n\nexport const reviewLayer = {\n  id: 'reviewLayer',\n  source: 'labels',\n  type: 'line',\n  paint: {\n    'line-width': ['match', ['get', 'status'], 'no', 1, 'yes', 1, 1],\n    'line-color': ['match', ['get', 'status'], 'no', '#30ff07', 'yes', '#30ff07', 'white'],\n    'line-gap-width': ['match', ['get', 'status'], 'no', 6, 'yes', 6, 0],\n    'line-opacity': 50 / 100\n  }\n};\n\nexport const conflictLayer = {\n  id: 'conflictLayer',\n  source: 'labels',\n  type: 'line',\n  paint: {\n    'line-width': ['match', ['get', 'conflict'], 'yes', 2, 0],\n    'line-color': ['match', ['get', 'conflict'], 'yes', '#ff0000', 'no', 'white', 'white'],\n    'line-dasharray': [10, 10],\n    'line-opacity': 50 / 100\n  }\n};\n\nexport const activeFeatureLayer = {\n  id: 'activeFeature',\n  source: 'activeFeature',\n  type: 'line',\n  paint: {\n    'line-width': 2,\n    'line-gap-width': 6,\n    'line-color': '#ffff00',\n    'line-opacity': 0.8\n  }\n};\n","import React, { Component } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport PropTypes from 'prop-types';\nimport bbox from '@turf/bbox';\nimport { saveAs } from 'file-saver';\nimport { connect } from 'react-redux';\nimport MapLoadingProgress from './MapLoadingProgress';\nimport { downloadGeojsonFile } from '../actions/controlAction';\nimport { selectedFeature } from '../actions/featureActions';\nimport { setErrorLabelValidate } from '../actions/dataActions';\nimport { validateTile } from './../utils/validate';\nimport config from './../config.json';\nimport { paintLayer, reviewLayer, conflictLayer, activeFeatureLayer } from './Map.style';\nclass Map extends Component {\n  constructor (props) {\n    super(props);\n    this.state = { loading: true };\n    this.onLabelClick = this.onLabelClick.bind(this);\n    this.save = this.save.bind(this);\n    this.loadExtraStyles = this.loadExtraStyles.bind(this);\n    this.toogleLayer = this.toogleLayer.bind(this);\n  }\n\n  componentDidMount () {\n    // mapboxgl.accessToken = config.accessToken;\n    const styleTMS = {\n      version: 8,\n      sources: {\n        'raster-tiles': {\n          type: 'raster',\n          tiles: config.layers,\n          tileSize: 256\n        }\n      },\n      layers: [\n        {\n          id: 'tmsLayer',\n          type: 'raster',\n          source: 'raster-tiles',\n          minzoom: 0,\n          maxzoom: 22\n        }\n      ]\n    };\n    const mapConfig = {\n      container: this.node,\n      style: styleTMS,\n      center: [0, 0],\n      zoom: 0,\n      attributionControl: true,\n      hash: true,\n      maxZoom: 18\n    };\n    this.hoverId = 0;\n    const map = new mapboxgl.Map(mapConfig);\n    const onMapRender = e => {\n      if (e.target && e.target.loaded()) {\n        this.setState({ loading: false });\n      }\n    };\n    this.onMapRender = onMapRender;\n    map.on('render', this.onMapRender);\n    map.on('load', () => {\n      map.on('click', 'labels', this.onLabelClick);\n      this.loadExtraStyles();\n    });\n    map.on('mouseover', 'labels', function (e) {\n      map.getCanvas().style.cursor = e ? 'pointer' : '';\n    });\n    this.map = map;\n  }\n\n  componentWillReceiveProps (nextProps) {\n    if (nextProps.data && nextProps.currentlabel) {\n      this.initLabels(nextProps.data, nextProps.currentlabel, nextProps.opacity);\n    }\n    if (nextProps.feature) {\n      this.updateFeature(nextProps.feature);\n      this.activeStyle(nextProps.feature);\n    }\n    // Download geojso file\n    if (nextProps.downloadFile) {\n      this.save();\n      this.props.dispatch(downloadGeojsonFile(false));\n    }\n    this.toogleLayer(nextProps.revLayer, nextProps.valLayer);\n  }\n\n  toogleLayer (revLayer, valLayer) {\n    if (this.map.getLayer('conflictLayer')) {\n      valLayer ? this.map.setLayoutProperty('conflictLayer', 'visibility', 'visible') : this.map.setLayoutProperty('conflictLayer', 'visibility', 'none');\n    }\n    if (this.map.getLayer('reviewLayer')) {\n      revLayer ? this.map.setLayoutProperty('reviewLayer', 'visibility', 'visible') : this.map.setLayoutProperty('reviewLayer', 'visibility', 'none');\n      // if (revLayer) {\n      //   this.map.setLayoutProperty('reviewLayer', 'line-color', ['match', ['get', 'status'], 'no', '#30ff07', 'yes', '#30ff07', 'white']);\n      //   this.map.setLayoutProperty('reviewLayer', 'line-gap-width', ['match', ['get', 'status'], 'no', 6, 'yes', 6, 0]);\n      // } else {\n      //   this.map.setLayoutProperty('reviewLayer', 'line-color', 'white');\n      //   this.map.setLayoutProperty('reviewLayer', 'line-gap-width', '0');\n      // }\n    }\n  }\n\n  updateFeature (feature) {\n    const data = this.props.data;\n    let confictLabel = 0;\n    data.features = this.props.data.features.map(f => {\n      if (f.properties.index === feature.properties.index) {\n        f.properties = Object.assign({}, feature.properties);\n      }\n      if (f.properties.conflict === 'yes') {\n        confictLabel++;\n      }\n\n      return f;\n    });\n    this.map.getSource('labels').setData(data);\n    this.props.dispatch(setErrorLabelValidate(confictLabel));\n  }\n\n  activeStyle (feature) {\n    if (!this.map.getSource('activeFeature')) {\n      this.map.addSource('activeFeature', {\n        type: 'geojson',\n        data: {\n          type: 'FeatureCollection',\n          features: [feature]\n        }\n      });\n      this.map.addLayer(activeFeatureLayer);\n    } else {\n      this.map.getSource('activeFeature').setData({\n        type: 'FeatureCollection',\n        features: [feature]\n      });\n    }\n  }\n\n  onLabelClick (event) {\n    // shift the label by one\n    const feature = event.features[0];\n    const clase = this.props.currentlabel;\n    const data = this.props.data;\n    data.features = this.props.data.features.map(f => {\n      if (f.properties.index === feature.properties.index) {\n        f.properties.label[clase.id] = f.properties.label[clase.id] ? 0 : 1;\n        f.properties.status = !f.properties.status || f.properties.status === 'no' ? 'yes' : 'no';\n        f = validateTile(f);\n        this.props.dispatch(selectedFeature(f));\n      }\n      return f;\n    });\n    this.map.getSource('labels').setData(data);\n  }\n\n  save () {\n    if (this.map.getSource('labels')) {\n      const data = this.map.getSource('labels')._data;\n      const blob = new Blob([JSON.stringify(data)], { type: 'application/json;charset=utf-8' });\n      saveAs(blob, this.props.fileName);\n    }\n  }\n\n  loadExtraStyles () {\n    config.classes.forEach(c => {\n      if (c.layers.length > 0) {\n        this.map.addLayer({\n          id: c.name,\n          type: 'raster',\n          source: {\n            type: 'raster',\n            tiles: c.layers,\n            minzoom: 0,\n            maxzoom: 22\n          }\n        });\n        this.map.setLayoutProperty(c.name, 'visibility', 'none');\n      }\n    });\n  }\n\n  initLabels (data, currentlabel, opacity) {\n    const filters = [\n      ['==', ['number', ['at', currentlabel.id, ['array', ['get', 'label']]]], 1],\n      currentlabel.color\n    ];\n    const fillColors = ['case'].concat(filters).concat(['black']);\n\n    /**\n     * Load the layer for first time\n     */\n    if (!this.map.getSource('labels')) {\n      paintLayer.paint['fill-color'] = fillColors;\n\n      /**\n       * Set label\n       */\n      data.features = data.features.map((f, i) => {\n        f.properties.index = i;\n        f = validateTile(f);\n        return f;\n      });\n      this.map.addSource('labels', {\n        type: 'geojson',\n        data: data\n      });\n      const box = bbox(data);\n      // zoom to the data\n      this.map.fitBounds([[box[0], box[1]], [box[2], box[3]]]);\n      this.map.addLayer(paintLayer);\n      this.map.addLayer(reviewLayer);\n      this.map.addLayer(conflictLayer);\n    } else {\n      this.map.setPaintProperty('labels', 'fill-color', fillColors);\n      this.map.setPaintProperty('labels', 'fill-opacity', opacity / 100);\n      this.map.setPaintProperty('reviewLayer', 'line-opacity', opacity / 100);\n      this.map.setPaintProperty('conflictLayer', 'line-opacity', opacity / 100);\n      // show and hide layers\n      config.classes.forEach((c, i) => {\n        const layerName = c.name;\n        if (this.map.getLayer(layerName)) {\n          this.map.setLayoutProperty(layerName, 'visibility', 'none');\n          if (currentlabel.id === i) {\n            this.map.setLayoutProperty(layerName, 'visibility', 'visible');\n          }\n        }\n      });\n    }\n  }\n\n  render () {\n    const { loading } = this.state;\n    const style = {\n      position: 'absolute',\n      top: 0,\n      rigt: 0,\n      left: 0,\n      zIndex: 99,\n      bottom: 0,\n      width: '100%',\n      overflow: 'hidden'\n    };\n\n    return (\n      <React.Fragment>\n        <div id='map' style={style} ref={c => (this.node = c)} />\n        <MapLoadingProgress loading={loading} />\n      </React.Fragment>\n    );\n  }\n}\n\nMap.propTypes = {\n  data: PropTypes.object,\n  currentlabel: PropTypes.object,\n  feature: PropTypes.object,\n  opacity: PropTypes.number,\n  downloadFile: PropTypes.bool,\n  dispatch: PropTypes.func,\n  revLayer: PropTypes.bool,\n  valLayer: PropTypes.bool,\n  fileName: PropTypes.string\n};\n\nconst mapStateToProps = state => ({\n  data: state.geojsonData.data,\n  loading: state.geojsonData.loading,\n  error: state.geojsonData.error,\n  labels: state.geojsonData.labels,\n  currentlabel: state.geojsonData.label,\n  opacity: state.control.opacity,\n  downloadFile: state.control.downloadFile,\n  feature: state.tile.feature,\n  revLayer: state.control.revLayer,\n  valLayer: state.control.valLayer,\n  fileName: state.geojsonData.fileName\n});\n\nexport default connect(mapStateToProps)(Map);\n","import React, { Component } from 'react';\nimport Files from 'react-files';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchData } from './../actions/dataActions';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nclass Loadfile extends Component {\n  constructor (props) {\n    super(props);\n    this.onFilesChange = this.onFilesChange.bind(this);\n  }\n\n  onFilesChange (files) {\n    this.props.dispatch(fetchData(files));\n  }\n\n  onFilesError (error, file) {\n    console.err('error code ' + error.code + ': ' + error.message);\n  }\n\n  render () {\n    return (\n      <div style={{ padding: 10 }}>\n        <Typography variant='caption' display='block' gutterBottom>\n          Load label-maker geojson file\n        </Typography>\n        <Paper>\n          <Files\n            className='files-dropzone-list'\n            onChange={this.onFilesChange}\n            onError={this.onFilesError}\n            accepts={['.geojson', '.json']}\n            maxFiles={1}\n            maxFileSize={1000000000}\n            minFileSize={0}\n            clickable\n          >\n            <input type='submit' value='Choose a file' style={{ width: '210px', margin: '5px' }} />\n          </Files>\n        </Paper>\n      </div>\n    );\n  }\n}\n\nLoadfile.propTypes = {\n  dispatch: PropTypes.func\n};\n\nexport default connect(null)(Loadfile);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Paper from '@material-ui/core/Paper';\nimport Slider from '@material-ui/core/Slider';\nimport Typography from '@material-ui/core/Typography';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nimport {\n  changeOpacity,\n  revisionLayer,\n  validationLayer\n} from './../actions/controlAction';\n\nfunction ValueLabelComponent (props) {\n  const { children, open, value } = props;\n  const popperRef = React.useRef(null);\n  React.useEffect(() => {\n    if (popperRef.current) {\n      popperRef.current.update();\n    }\n  });\n\n  return (\n    <Tooltip\n      PopperProps={{\n        popperRef\n      }}\n      open={open}\n      enterTouchDelay={0}\n      placement='top'\n      title={value}\n    >\n      {children}\n    </Tooltip>\n  );\n}\n\nValueLabelComponent.propTypes = {\n  children: PropTypes.element.isRequired,\n  open: PropTypes.bool.isRequired,\n  value: PropTypes.number.isRequired\n};\n\nclass SliderComponent extends Component {\n  constructor (props) {\n    super(props);\n    this.changeOpacityControl = this.changeOpacityControl.bind(this);\n    this.toogleRevLayer = this.toogleRevLayer.bind(this);\n    this.toogleValLayer = this.toogleValLayer.bind(this);\n  }\n\n  changeOpacityControl (event, value) {\n    this.props.dispatch(changeOpacity(value));\n  }\n\n  toogleRevLayer (value) {\n    this.props.dispatch(revisionLayer(!value));\n  }\n\n  toogleValLayer (value) {\n    this.props.dispatch(validationLayer(!value));\n  }\n\n  render () {\n    const { opacity, revLayer, valLayer } = this.props;\n    return (\n      <div style={{ width: '210px', margin: '1px' }}>\n        <Typography\n          variant='caption'\n          display='block'\n          gutterBottom\n          style={{ marginLeft: '5px' }}\n        >\n          Label opacity\n        </Typography>\n        <Paper style={{ padding: '3px' }}>\n          <Slider\n            ValueLabelComponent={ValueLabelComponent}\n            aria-label='label'\n            defaultValue={opacity}\n            onChange={this.changeOpacityControl}\n          />\n        </Paper>\n\n        <FormControlLabel\n          style={{ marginTop: '10px' }}\n          control={\n            <Checkbox\n              style={{ paddingBottom: '1px', paddingTop: '1px' }}\n              checked={revLayer}\n              onChange={() => {\n                this.toogleRevLayer(revLayer);\n              }}\n              color='primary'\n            />\n          }\n          label={\n            <Typography variant='caption' display='block' gutterBottom>\n              Revision layer\n            </Typography>\n          }\n        />\n        <FormControlLabel\n          control={\n            <Checkbox\n              style={{ paddingBottom: '1px', paddingTop: '1px' }}\n              checked={valLayer}\n              onChange={() => {\n                this.toogleValLayer(valLayer);\n              }}\n              color='primary'\n            />\n          }\n          label={\n            <Typography variant='caption' display='block' gutterBottom>\n              Validation layer\n            </Typography>\n          }\n        />\n      </div>\n    );\n  }\n}\n\nSliderComponent.propTypes = {\n  dispatch: PropTypes.func,\n  opacity: PropTypes.number,\n  revLayer: PropTypes.bool,\n  valLayer: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  opacity: state.control.opacity,\n  revLayer: state.control.revLayer,\n  valLayer: state.control.valLayer\n});\n\nexport default connect(mapStateToProps)(SliderComponent);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Chip, Typography } from '@material-ui/core';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport PropTypes from 'prop-types';\nimport { selectedFeature } from '../actions/featureActions';\nimport { validateTile } from './../utils/validate';\nimport config from './../config.json';\n\nclass DisplayConflicts extends Component {\n  setLabelIn0 (index) {\n    let feature = this.props.feature;\n    feature.properties.label[index] = 0;\n    feature = validateTile(feature);\n    this.props.dispatch(selectedFeature(feature));\n  }\n\n  render () {\n    const { feature, labels } = this.props;\n    return (\n      <div style={{ width: '210px', margin: '1px' }}>\n        <Typography variant='caption' display='block' gutterBottom>\n        Labels on the tile\n        </Typography>\n        {\n          feature ? feature.properties.label.map((label, index) => {\n            if (label === 1) {\n              return (\n                <Chip\n                  key={`chip-${index}`}\n                  icon={<ErrorIcon />}\n                  label={config.classes[index].name || labels[index]}\n                  onDelete={() => { this.setLabelIn0(index); }}\n                  style={{ backgroundColor: labels[index].color }}\n                />\n              );\n            } else {\n              return null;\n            }\n          }) : null\n        }\n      </div>\n    );\n  }\n}\n\nDisplayConflicts.propTypes = {\n  feature: PropTypes.object,\n  labels: PropTypes.array,\n  dispatch: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  feature: state.tile.feature,\n  labels: state.geojsonData.labels\n});\n\nexport default connect(mapStateToProps)(DisplayConflicts);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport {\n  CardActions,\n  Typography,\n  Grid,\n  MenuItem,\n  MenuList,\n  Divider\n} from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport { setLabel } from '../actions/dataActions';\nimport config from './../config.json';\nimport Loadfile from './Loadfile';\nimport Slider from './Slider';\nimport DisplayConflicts from './DisplayConflicts';\n\nconst styles = theme => ({\n  title: {\n    fontSize: 12,\n    alignItems: 'center',\n    marginTop: '5px'\n  },\n  legendSpan: {\n    display: 'block',\n    height: '25px',\n    width: '60px',\n    textAlign: 'center',\n    alignItems: 'center',\n    color: '#808080'\n  }\n});\n\nclass Sidebar extends Component {\n  constructor () {\n    super();\n    this.contentEditable = React.createRef();\n    this.choseLabel = this.choseLabel.bind(this);\n  }\n\n  choseLabel (label, id) {\n    this.props.dispatch(setLabel(label));\n  }\n\n  render () {\n    const { classes, labels, currentlabel } = this.props;\n    return (\n      <div>\n        <MenuList>\n          {labels.map((label, id) => (\n            <div key={id.toString()}>\n              <MenuItem\n                selected={label.id === currentlabel.id}\n                onClick={() => {\n                  this.choseLabel(label, id);\n                }}\n                style={{ paddingBottom: '2px', paddingTop: '2px' }}\n              >\n                <Grid item xs={12}>\n                  <Grid container justify='center'>\n                    <Grid item xs={8}>\n                      <Typography\n                        className={classes.title}\n                        color='textSecondary'\n                        gutterBottom\n                      >\n                        {config.classes[id].name || label.class}\n                      </Typography>\n                    </Grid>\n                    <Grid item xs={4}>\n                      <span\n                        style={{ background: label.color, marginLeft: '5px' }}\n                        className={classes.legendSpan}\n                      />\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </MenuItem>\n              <Divider />\n            </div>\n          ))}\n        </MenuList>\n        {labels.length === 0 ? <Loadfile /> : null}\n        <Divider />\n        <CardActions>\n          {labels.length > 0 ? (\n            <div>\n              <Slider />\n            </div>\n          ) : null}\n        </CardActions>\n        <Divider />\n        <CardActions>\n          <DisplayConflicts />\n        </CardActions>\n        <Divider />\n      </div>\n    );\n  }\n}\n\nSidebar.propTypes = {\n  classes: PropTypes.object,\n  dispatch: PropTypes.func,\n  labels: PropTypes.array,\n  currentlabel: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  labels: state.geojsonData.labels,\n  currentlabel: state.geojsonData.label\n});\n\nexport default compose(\n  connect(mapStateToProps),\n  withStyles(styles)\n)(Sidebar);\n","import React, { Component } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/styles';\nimport { Drawer, Typography, Divider, IconButton } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport Header from './Header';\nimport styles from './../style/HomeStyles';\nimport Map from './Map';\nimport Sidebar from './Sidebar';\nimport { fetchDataURL } from './../actions/dataActions';\nclass Home extends Component {\n  constructor (props) {\n    super(props);\n    this.handleDrawerOpen = this.handleDrawerOpen.bind(this);\n    this.handleDrawerClose = this.handleDrawerClose.bind(this);\n    this.state = { open: true };\n    const url = window.location.href.split('?url=')[1];\n    this.props.dispatch(fetchDataURL(url));\n  }\n\n  handleDrawerOpen () {\n    this.setState({ open: true });\n  }\n\n  handleDrawerClose () {\n    this.setState({ open: false });\n  }\n\n  render () {\n    // const open =true;\n    const { classes } = this.props;\n    const { open } = this.state;\n    return (\n      <div className={classes.root}>\n        <Header handleDrawerOpen={this.handleDrawerOpen} open={open} />\n        <Drawer\n          className={classes.drawer}\n          variant='persistent'\n          anchor='left'\n          open={open}\n          classes={{\n            paper: classes.drawerPaper\n          }}\n        >\n          <div className={classes.drawerHeader}>\n            <Typography gutterBottom component='h3'>\n              Classes\n            </Typography>\n            <IconButton onClick={this.handleDrawerClose}>\n              <ChevronLeftIcon />\n            </IconButton>\n          </div>\n          <Divider />\n          <Sidebar />\n        </Drawer>\n        <Map className={clsx(classes.content)} />\n      </div>\n    );\n  }\n}\n\nHome.propTypes = {\n  classes: PropTypes.object,\n  dispatch: PropTypes.func\n};\n\nconst mapStateToProps = state => ({});\n\nexport default compose(\n  connect(mapStateToProps),\n  withStyles(styles)\n)(Home);\n","import React, { Component } from 'react';\nimport 'typeface-roboto'; // eslint-disable-line\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport amber from '@material-ui/core/colors/amber';\nimport red from '@material-ui/core/colors/red';\nimport { ThemeProvider } from '@material-ui/styles';\nimport Home from './components/Home';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: amber,\n    secondary: red\n  }\n});\n\nclass App extends Component {\n  render () {\n    return (\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <Home />\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport HttpsRedirect from 'react-https-redirect';\n\nimport store from './store';\nimport App from './App';\n\nReactDOM.render(\n  <HttpsRedirect>\n    <Provider store={store}>\n      <BrowserRouter basename='/relabeler'>\n        <Switch>\n          <Route exact component={App} path='/' />\n        </Switch>\n      </BrowserRouter>\n    </Provider>\n  </HttpsRedirect>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}